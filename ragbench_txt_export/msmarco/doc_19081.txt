Prior to R5RS, Scheme had no standard equivalent of the eval procedure which is ubiquitous in other Lisps, although the first Lambda Paper had described evaluate as similar to the LISP function EVAL and the first Revised Report in 1978 replaced this with enclose, which took two arguments. As in other Lisps, the term  thunk  is used in Scheme to refer to a procedure with no arguments. The term proper tail recursion refers to the property of all Scheme implementations, that they perform tail-call optimization so as to support an indefinite number of active tail calls.